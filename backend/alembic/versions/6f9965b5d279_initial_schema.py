"""initial schema

Revision ID: 6f9965b5d279
Revises: 
Create Date: 2025-07-05 13:54:39.473838

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '6f9965b5d279'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_conversations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('user_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_conversations_user_email'), 'email_conversations', ['user_email'], unique=False)
    op.create_table('emails',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('sender', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('recipient', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('PENDING', 'SENT', 'RETRY', 'FAILED', name='emailstate'), nullable=False),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('update_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('keywords',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matching_runs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('algorithm_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('vault_path', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_email'), 'organizations', ['email'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=True)
    op.create_table('subscriptions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('domain', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('paywall', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Indicates if this is included in the webcrawling pipeline'),
    sa.Column('crawlers', sa.JSON(), nullable=True, comment='List of Crawlers usedfor this subscription. Contains the Class and the config to initializer the Crawler'),
    sa.Column('login_config', sa.JSON(), nullable=True, comment='Contains the xpath for the scraping of paywalled newspapers'),
    sa.Column('encrypted_secrets', sa.LargeBinary(), nullable=True),
    sa.Column('encrypted_username', sa.LargeBinary(), nullable=True),
    sa.Column('scrapers', sa.JSON(), nullable=True, comment='List of Scrapers used for this subscription. Contains the Class and the config to initialize the Scraper'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('articles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=True, comment="URL of the article's image"),
    sa.Column('authors', sa.JSON(), nullable=True, comment='List of authors for the article'),
    sa.Column('published_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('categories', sa.JSON(), nullable=True, comment='List of categories for the article'),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('NEW', 'SCRAPED', 'SUMMARIZED', 'TRANSLATED', 'EMBEDDED', 'ERROR', name='articlestatus'), nullable=False),
    sa.Column('relevance', sa.Integer(), nullable=False),
    sa.Column('title_en', sa.Text(), nullable=True),
    sa.Column('title_de', sa.Text(), nullable=True),
    sa.Column('content_en', sa.Text(), nullable=True),
    sa.Column('content_de', sa.Text(), nullable=True),
    sa.Column('summary_en', sa.Text(), nullable=True),
    sa.Column('summary_de', sa.Text(), nullable=True),
    sa.Column('crawled_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('scraped_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_articles_subscription_id'), 'articles', ['subscription_id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email_conversation_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ASSISTANT', name='messagerole'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['email_conversation_id'], ['email_conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crawl_stats',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.Column('total_successful', sa.Integer(), nullable=False),
    sa.Column('total_attempted', sa.Integer(), nullable=False),
    sa.Column('crawl_date', sa.Date(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crawl_stats_subscription_id'), 'crawl_stats', ['subscription_id'], unique=False)
    op.create_table('organizations_subscriptions',
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'subscription_id')
    )
    op.create_table('users',
    sa.Column('clerk_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('language', sa.String(length=2), server_default='en', nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_clerk_id'), 'users', ['clerk_id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_table('articles_keywords',
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('keyword_id', sa.Uuid(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], ),
    sa.PrimaryKeyConstraint('article_id', 'keyword_id')
    )
    op.create_table('entities',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entity_type', sa.Text(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('value_en', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('value_de', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entities_article_id'), 'entities', ['article_id'], unique=False)
    op.create_table('search_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('organization_emails', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('profile_emails', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('can_read_user_ids', sa.ARRAY(sa.UUID()), server_default='{}', nullable=True),
    sa.Column('can_edit_user_ids', sa.ARRAY(sa.UUID()), server_default='{}', nullable=True),
    sa.Column('language', sa.String(length=2), server_default='en', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('time_slot', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('s3_key', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'UPLOADED', 'FAILED', name='reportstatus'), nullable=False),
    sa.Column('matching_run_id', sa.Uuid(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.ForeignKeyConstraint(['matching_run_id'], ['matching_runs.id'], ),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_profiles_subscriptions',
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('search_profile_id', 'subscription_id')
    )
    op.create_table('topics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topics_search_profile_id'), 'topics', ['search_profile_id'], unique=False)
    op.create_table('users_search_profiles',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'search_profile_id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.Column('topic_id', sa.Uuid(), nullable=True),
    sa.Column('sorting_order', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('matched_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('matching_run_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['matching_run_id'], ['matching_runs.id'], ),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_matches_article_id'), 'matches', ['article_id'], unique=False)
    op.create_index(op.f('ix_matches_matching_run_id'), 'matches', ['matching_run_id'], unique=False)
    op.create_index(op.f('ix_matches_search_profile_id'), 'matches', ['search_profile_id'], unique=False)
    op.create_index(op.f('ix_matches_topic_id'), 'matches', ['topic_id'], unique=False)
    op.create_table('topics_keywords',
    sa.Column('topic_id', sa.Uuid(), nullable=False),
    sa.Column('keyword_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('topic_id', 'keyword_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('topics_keywords')
    op.drop_index(op.f('ix_matches_topic_id'), table_name='matches')
    op.drop_index(op.f('ix_matches_search_profile_id'), table_name='matches')
    op.drop_index(op.f('ix_matches_matching_run_id'), table_name='matches')
    op.drop_index(op.f('ix_matches_article_id'), table_name='matches')
    op.drop_table('matches')
    op.drop_table('users_search_profiles')
    op.drop_index(op.f('ix_topics_search_profile_id'), table_name='topics')
    op.drop_table('topics')
    op.drop_table('search_profiles_subscriptions')
    op.drop_table('reports')
    op.drop_table('search_profiles')
    op.drop_index(op.f('ix_entities_article_id'), table_name='entities')
    op.drop_table('entities')
    op.drop_table('articles_keywords')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_clerk_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('organizations_subscriptions')
    op.drop_index(op.f('ix_crawl_stats_subscription_id'), table_name='crawl_stats')
    op.drop_table('crawl_stats')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_articles_subscription_id'), table_name='articles')
    op.drop_table('articles')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_email'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_table('matching_runs')
    op.drop_table('keywords')
    op.drop_table('emails')
    op.drop_index(op.f('ix_email_conversations_user_email'), table_name='email_conversations')
    op.drop_table('email_conversations')
    # ### end Alembic commands ###
