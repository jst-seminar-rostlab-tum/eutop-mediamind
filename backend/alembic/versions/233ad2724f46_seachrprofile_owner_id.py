"""seachrprofile owner_id

Revision ID: 233ad2724f46
Revises: 2e9243e9b497
Create Date: 2025-06-10 14:10:37.077975

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '233ad2724f46'
down_revision: Union[str, None] = '2e9243e9b497'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 1) add as nullable
    op.add_column(
        'search_profiles',
        sa.Column('owner_id', sa.Uuid(), nullable=True),
    )

    # 2) back-fill from created_by_id
    op.execute(
        """
        UPDATE search_profiles
        SET owner_id = created_by_id
        WHERE owner_id IS NULL
        """
    )

    # 3) now that every row has a value, make it non-nullable
    op.alter_column(
        'search_profiles',
        'owner_id',
        nullable=False
    )

    # 4) add your FK
    op.create_foreign_key(
        None,                    # let Alembic pick a name
        'search_profiles',       # source table
        'users',                 # target table
        ['owner_id'],            # source cols
        ['id']                   # target cols
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'search_profiles', type_='foreignkey')
    op.drop_column('search_profiles', 'owner_id')
    # ### end Alembic commands ###
