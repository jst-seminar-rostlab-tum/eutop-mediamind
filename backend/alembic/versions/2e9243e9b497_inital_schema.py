"""inital schema

Revision ID: 2e9243e9b497
Revises: 
Create Date: 2025-06-10 13:39:49.246639

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '2e9243e9b497'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keywords',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('vault_path', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_email'), 'organizations', ['email'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=True)
    op.create_table('subscriptions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('domain', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('config', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('scraper_type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('encrypted_secrets', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('articles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_articles_subscription_id'), 'articles', ['subscription_id'], unique=False)
    op.create_table('organizations_subscriptions',
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'subscription_id')
    )
    op.create_table('users',
    sa.Column('clerk_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_clerk_id'), 'users', ['clerk_id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_table('articles_keywords',
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('keyword_id', sa.Uuid(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], ),
    sa.PrimaryKeyConstraint('article_id', 'keyword_id')
    )
    op.create_table('search_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('organization_emails', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('profile_emails', sa.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.Column('sorting_order', sa.Integer(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_matches_article_id'), 'matches', ['article_id'], unique=False)
    op.create_index(op.f('ix_matches_search_profile_id'), 'matches', ['search_profile_id'], unique=False)
    op.create_table('search_profiles_subscriptions',
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('search_profile_id', 'subscription_id')
    )
    op.create_table('topics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topics_search_profile_id'), 'topics', ['search_profile_id'], unique=False)
    op.create_table('users_search_profiles',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('search_profile_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['search_profile_id'], ['search_profiles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'search_profile_id')
    )
    op.create_table('topics_keywords',
    sa.Column('topic_id', sa.Uuid(), nullable=False),
    sa.Column('keyword_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('topic_id', 'keyword_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('topics_keywords')
    op.drop_table('users_search_profiles')
    op.drop_index(op.f('ix_topics_search_profile_id'), table_name='topics')
    op.drop_table('topics')
    op.drop_table('search_profiles_subscriptions')
    op.drop_index(op.f('ix_matches_search_profile_id'), table_name='matches')
    op.drop_index(op.f('ix_matches_article_id'), table_name='matches')
    op.drop_table('matches')
    op.drop_table('search_profiles')
    op.drop_table('articles_keywords')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_clerk_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('organizations_subscriptions')
    op.drop_index(op.f('ix_articles_subscription_id'), table_name='articles')
    op.drop_table('articles')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_email'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_table('keywords')
    # ### end Alembic commands ###
